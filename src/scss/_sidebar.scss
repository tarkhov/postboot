.sidebar {
  display: block;
  padding-top: $sidebar-padding-y;
  padding-bottom: $sidebar-padding-y;
  position: relative;
}

.sidebar-brand {
  display: inline-block;
  padding: $sidebar-brand-padding-y $sidebar-brand-padding-x;
  font-size: $sidebar-brand-font-size;
  line-height: inherit;
  white-space: nowrap;

  &:focus,
  &:hover {
    text-decoration: none;
  }
}

.sidebar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.sidebar-text {
  padding: $nav-link-padding-y $nav-link-padding-x;
}

.sidebar-toggler {
  padding: $sidebar-toggler-padding-y $sidebar-toggler-padding-x;
  font-size: $sidebar-toggler-font-size;
  line-height: 1;
  background: transparent;
  border: $border-width solid transparent;
  @include border-radius($sidebar-toggler-border-radius);

  &:focus,
  &:hover {
    text-decoration: none;
  }
}

.sidebar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint);
    $infix: breakpoint-infix($next);

    &#{$infix} {
      @include media-breakpoint-up($next) {
        .sidebar-collapse {
          display: inline-block !important;
        }
      }
    }
  }
}

.sidebar-light {
  .sidebar-brand {
    color: $sidebar-light-active-color;

    &:focus,
    &:hover {
      color: $sidebar-light-active-color;
    }
  }

  .sidebar-nav {
    .nav-link {
      color: $sidebar-light-color;

      &:focus,
      &:hover {
        color: $sidebar-light-hover-color;
      }

      &.disabled {
        color: $sidebar-light-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $sidebar-light-active-color;
    }
  }


  .sidebar-toggler {
    color: $sidebar-light-color;
    border-color: $sidebar-light-toggler-border-color;
  }

  .sidebar-text {
    color: $sidebar-light-color;
  }
}

// White links against a dark background
.sidebar-dark {
  .sidebar-brand {
    color: $sidebar-dark-active-color;

    &:focus,
    &:hover {
      color: $sidebar-dark-active-color;
    }
  }

  .sidebar-nav {
    .nav-link {
      color: $sidebar-dark-color;

      &:focus,
      &:hover {
        color: $sidebar-dark-hover-color;
      }

      &.disabled {
        color: $sidebar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $sidebar-dark-active-color;
    }
  }


  .sidebar-toggler {
    color: $sidebar-dark-color;
    border-color: $sidebar-dark-toggler-border-color;
  }

  .sidebar-text {
    color: $sidebar-dark-color;
  }
}

// Sizes
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint);

    @each $size, $sidebar in $sidebar-sizes {
      @if $size != 0 {
        .sidebar#{$infix}-#{$size} {
          @include sidebar-size(map-get($sidebar, 'padding-y'), map-get($sidebar, 'font-size'), map-get($sidebar, 'brand-font-size'), map-get($sidebar, 'brand-padding-y'), map-get($sidebar, 'brand-padding-x'), map-get($sidebar, 'link-padding-y'), map-get($sidebar, 'link-padding-x'));
        }
      }
    }
  }
}

// Nav size
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint);

    @each $size, $sidebar in $sidebar-sizes {
      @if $size != 0 {
        .sidebar-nav#{$infix}-#{$size} {
          @include sidebar-nav-size(map-get($sidebar, 'link-padding-y'), map-get($sidebar, 'link-padding-x'), map-get($sidebar, 'font-size'));
        }
      }
      .sidebar-nav-y#{$infix}-#{$size} {
        @include sidebar-nav-size-y(map-get($sidebar, 'link-padding-y'));
      }
      .sidebar-nav-x#{$infix}-#{$size} {
        @include sidebar-nav-size-x(map-get($sidebar, 'link-padding-x'));
      }
    }
  }
}
